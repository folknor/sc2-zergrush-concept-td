
static const int zrIntroCustomX = 60;
static const int zrIntroCustomY = 61;
static const int zrIntroCustomTag = 62;

static unitgroup zrIntroTrucks;
static trigger zrTruckEntersTrigger;


static void zrTruckIntroMove() {
	fixed x;
	fixed y;
	unit truck;
	int count = UnitGroupCount(zrIntroTrucks, 0);
	int i = 1; // UnitGroupUnit is 1-based index
	int r = RandomInt(1, count);
	region stop = RegionFromName("Truck Stop");
	
	for (; i <= count; i += 1 ) {
		truck = UnitGroupUnit(zrIntroTrucks, i);
		x = UnitGetCustomValue(truck, zrIntroCustomX);
		y = UnitGetCustomValue(truck, zrIntroCustomY);
		UnitIssueOrder(truck, OrderTargetingPoint(zr_CmdMove, Point(x, y)), c_orderQueueReplace);
		//TriggerAddEventUnitRegion(zrTruckEntersTrigger, UnitRefFromUnit(truck), stop, true);
		if ( i == r ) {
			// Follow this truck
			UnitSetCustomValue(truck, zrIntroCustomTag, 1);
		}
	}
}

static point zrTrucksGetExit(string exit) {
	point x = PointFromName(exit);
	if ( x == null && exit != "/Safe Zone" ) {
		x = RegionGetCenter(RegionFromName(exit));
	}
	if ( x == null ) {
		x = PointFromName("Exit/Safe Zone");
	}
	if ( x == null ) {
		x = RegionGetCenter(RegionFromName("Exit/Safe Zone"));
	}
	// XXX error if we cant find the truck exit
	return x;
}


bool zrTruckHandleRegionEnter(bool check, bool run) {
	unit truck = EventUnit();
	if ( check && UnitGetType(truck) != "CargoTruckUnitTrailer" ) { return false; }
	if ( ! run ) { return true; }
	UnitIssueOrder(truck, Order(zr_CmdStop), c_orderQueueReplace);

	if ( UnitGetCustomValue(truck, zrIntroCustomTag) == 1 ) {
		// Follow this unit!
		CameraPan(1, UnitGetPosition(truck), 4, -1, 30, false);
		CameraSetValue(1, c_cameraValuePitch, 30, 4, -1, 0);
		CameraSetValue(1, c_cameraValueFarClip, 50, 3, -1, 0);
		CameraSetValue(1, c_cameraValueDistance, 20, 4, -1, 0);
		CameraSetValue(1, c_cameraValueYaw, UnitGetFacing(truck) + 140, 4, -1, 0);
	}
	return true;
}

// This function gets redefined in each Intros/, you're only supposed to load one.
void StartZergRushIntro() {
	int numStages = zrStagesAmount();
	int i = 1;
	int j = 1;
	zrWave w;
	unit truck;
	point exit;
	string pointIds = "";
	string tmpString;

	zrIntroTrucks = UnitGroupEmpty();

	for (; i <= numStages; i += 1) {
		for (; j < 21; j += 1) {
			w = zrStages[i].waves[j];
			if ( w.used ) {
				tmpString = w.entrance + w.exit;
				if (!StringContains(pointIds, tmpString, c_stringAnywhere, true)) {
					pointIds += tmpString + "|";
					// We need to create a new truck here!
					UnitCreate(1, "CargoTruckUnitTrailer", c_unitCreateIgnorePlacement, 0, w.entrancePoint, 270);
					truck = UnitLastCreated();
					
					exit = zrTrucksGetExit(w.exit + "/Safe Zone");
					UnitSetCustomValue(truck, zrIntroCustomX, PointGetX(exit));
					UnitSetCustomValue(truck, zrIntroCustomY, PointGetY(exit));
					
					UnitSetPropertyFixed(truck, c_unitPropMovementSpeed, 2.35);
					UnitGroupAdd(zrIntroTrucks, truck);
				}
			}
		}
		j = 1;
	}
	//zrTruckEntersTrigger = TriggerCreate("zrTruckHandleRegionEnter");

	zrTruckIntroMove();
}
